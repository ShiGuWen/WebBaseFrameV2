//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由WEF.ModelGenerator, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null生成;时间 2018-11-12 14:37:16.437
//     运行时版本:4.0.30319.42000
//     不建议手动更改此代码，如有需要请自行扩展partial类
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Runtime.Serialization;
using WEF;
using WEF.Common;
using WEF.Section;
using System.Collections.Generic;

namespace WebBaseFrame.Models
{

	/// <summary>
	/// 实体类Menu
	/// </summary>
	[Serializable, DataContract]
	public partial class Menu : Entity 
	{
		private static string m_tableName;
		public Menu():base("Menu") {m_tableName="Menu";}
		public Menu(string tableName):base(tableName) { m_tableName=tableName;}

		#region Model
		private int _ID;
		private string _Name;
		private int? _ParentID;
		private string _Icon;
		private string _Url;
		private int? _Sort;
		private int? _Level;
		private bool _IsDeleted;
		private int? _TypeID;
		private DateTime? _LastUpdateDate;
		private int? _LastUpdateUserID;
		private DateTime? _CreateDate;
		private int? _CreateUserID;
		/// <summary>
		/// ID 编号
		/// </summary>
		[DataMember]
		public int ID
		{
			get{ return _ID; }
			set
			{
				this.OnPropertyValueChange(_.ID,_ID,value);
				this._ID=value;
			}
		}
		/// <summary>
		/// Name 名称
		/// </summary>
		[DataMember]
		public string Name
		{
			get{ return _Name; }
			set
			{
				this.OnPropertyValueChange(_.Name,_Name,value);
				this._Name=value;
			}
		}
		/// <summary>
		/// ParentID 父级ID
		/// </summary>
		[DataMember]
		public int? ParentID
		{
			get{ return _ParentID; }
			set
			{
				this.OnPropertyValueChange(_.ParentID,_ParentID,value);
				this._ParentID=value;
			}
		}
		/// <summary>
		/// Icon 菜单图标
		/// </summary>
		[DataMember]
		public string Icon
		{
			get{ return _Icon; }
			set
			{
				this.OnPropertyValueChange(_.Icon,_Icon,value);
				this._Icon=value;
			}
		}
		/// <summary>
		/// Url 链接地址
		/// </summary>
		[DataMember]
		public string Url
		{
			get{ return _Url; }
			set
			{
				this.OnPropertyValueChange(_.Url,_Url,value);
				this._Url=value;
			}
		}
		/// <summary>
		/// Sort 排序
		/// </summary>
		[DataMember]
		public int? Sort
		{
			get{ return _Sort; }
			set
			{
				this.OnPropertyValueChange(_.Sort,_Sort,value);
				this._Sort=value;
			}
		}
		/// <summary>
		/// Level 
		/// </summary>
		[DataMember]
		public int? Level
		{
			get{ return _Level; }
			set
			{
				this.OnPropertyValueChange(_.Level,_Level,value);
				this._Level=value;
			}
		}
		/// <summary>
		/// IsDeleted 是否删除
		/// </summary>
		[DataMember]
		public bool IsDeleted
		{
			get{ return _IsDeleted; }
			set
			{
				this.OnPropertyValueChange(_.IsDeleted,_IsDeleted,value);
				this._IsDeleted=value;
			}
		}
		/// <summary>
		/// TypeID 
		/// </summary>
		[DataMember]
		public int? TypeID
		{
			get{ return _TypeID; }
			set
			{
				this.OnPropertyValueChange(_.TypeID,_TypeID,value);
				this._TypeID=value;
			}
		}
		/// <summary>
		/// LastUpdateDate 
		/// </summary>
		[DataMember]
		public DateTime? LastUpdateDate
		{
			get{ return _LastUpdateDate; }
			set
			{
				this.OnPropertyValueChange(_.LastUpdateDate,_LastUpdateDate,value);
				this._LastUpdateDate=value;
			}
		}
		/// <summary>
		/// LastUpdateUserID 
		/// </summary>
		[DataMember]
		public int? LastUpdateUserID
		{
			get{ return _LastUpdateUserID; }
			set
			{
				this.OnPropertyValueChange(_.LastUpdateUserID,_LastUpdateUserID,value);
				this._LastUpdateUserID=value;
			}
		}
		/// <summary>
		/// CreateDate 
		/// </summary>
		[DataMember]
		public DateTime? CreateDate
		{
			get{ return _CreateDate; }
			set
			{
				this.OnPropertyValueChange(_.CreateDate,_CreateDate,value);
				this._CreateDate=value;
			}
		}
		/// <summary>
		/// CreateUserID 
		/// </summary>
		[DataMember]
		public int? CreateUserID
		{
			get{ return _CreateUserID; }
			set
			{
				this.OnPropertyValueChange(_.CreateUserID,_CreateUserID,value);
				this._CreateUserID=value;
			}
		}
		#endregion

		#region Method
		/// <summary>
		/// 获取实体中的标识列
		/// </summary>
		public override Field GetIdentityField()
		{
			return _.ID;
		}
		/// <summary>
		/// 获取实体中的主键列
		/// </summary>
		public override Field[] GetPrimaryKeyFields()
		{
			return new Field[] {
				_.ID};
		}
		/// <summary>
		/// 获取列信息
		/// </summary>
		public override Field[] GetFields()
		{
			return new Field[] {
				_.ID,
				_.Name,
				_.ParentID,
				_.Icon,
				_.Url,
				_.Sort,
				_.Level,
				_.IsDeleted,
				_.TypeID,
				_.LastUpdateDate,
				_.LastUpdateUserID,
				_.CreateDate,
				_.CreateUserID};
		}
		/// <summary>
		/// 获取值信息
		/// </summary>
		public override object[] GetValues()
		{
			return new object[] {
				this._ID,
				this._Name,
				this._ParentID,
				this._Icon,
				this._Url,
				this._Sort,
				this._Level,
				this._IsDeleted,
				this._TypeID,
				this._LastUpdateDate,
				this._LastUpdateUserID,
				this._CreateDate,
				this._CreateUserID};
		}
		#endregion

		#region _Field
		/// <summary>
		/// 字段信息
		/// </summary>
		public class _
		{
			/// <summary>
			/// Menu 
			/// </summary>
			public readonly static Field All = new Field("*",m_tableName);
			/// <summary>
			/// ID 编号
			/// </summary>
			public readonly static Field ID = new Field("ID",m_tableName,"编号");
			/// <summary>
			/// Name 名称
			/// </summary>
			public readonly static Field Name = new Field("Name",m_tableName,"名称");
			/// <summary>
			/// ParentID 父级ID
			/// </summary>
			public readonly static Field ParentID = new Field("ParentID",m_tableName,"父级ID");
			/// <summary>
			/// Icon 菜单图标
			/// </summary>
			public readonly static Field Icon = new Field("Icon",m_tableName,"菜单图标");
			/// <summary>
			/// Url 链接地址
			/// </summary>
			public readonly static Field Url = new Field("Url",m_tableName,"链接地址");
			/// <summary>
			/// Sort 排序
			/// </summary>
			public readonly static Field Sort = new Field("Sort",m_tableName,"排序");
			/// <summary>
			/// Level 
			/// </summary>
			public readonly static Field Level = new Field("Level",m_tableName,"Level");
			/// <summary>
			/// IsDeleted 是否删除
			/// </summary>
			public readonly static Field IsDeleted = new Field("IsDeleted",m_tableName,"是否删除");
			/// <summary>
			/// TypeID 
			/// </summary>
			public readonly static Field TypeID = new Field("TypeID",m_tableName,"TypeID");
			/// <summary>
			/// LastUpdateDate 
			/// </summary>
			public readonly static Field LastUpdateDate = new Field("LastUpdateDate",m_tableName,"LastUpdateDate");
			/// <summary>
			/// LastUpdateUserID 
			/// </summary>
			public readonly static Field LastUpdateUserID = new Field("LastUpdateUserID",m_tableName,"LastUpdateUserID");
			/// <summary>
			/// CreateDate 
			/// </summary>
			public readonly static Field CreateDate = new Field("CreateDate",m_tableName,"CreateDate");
			/// <summary>
			/// CreateUserID 
			/// </summary>
			public readonly static Field CreateUserID = new Field("CreateUserID",m_tableName,"CreateUserID");
		}
		#endregion


	}
	/// <summary>
	/// 实体类Menu操作类
	/// </summary>
	public partial class MenuRepository
	{
		DBContext db;
		/// <summary>
		/// 当前实体查询上下文
		/// </summary>
		public ISearch<Menu> Search(string tableName="")
		{
			if (string.IsNullOrEmpty(tableName))
			{
				tableName="Menu";
			}
				return db.Search<Menu>(tableName);
		}
		/// <summary>
		/// 当前实体查询上下文
		/// </summary>
		public ISearch<Menu> Search(Menu entity)
		{
				return db.Search<Menu>(entity);
		}
		/// <summary>
		/// 构造方法
		/// </summary>
		public MenuRepository()
		{
			db = new DBContext();
		}
		/// <summary>
		/// 构造方法
		/// <param name="connStrName">连接字符串中的名称</param>
		/// </summary>
		public MenuRepository(string connStrName)
		{
			db = new DBContext(connStrName);
		}
		/// <summary>
		/// 当前db操作上下文
		/// </summary>
		public DBContext DBContext
		{
			get
			{
				return db;
			}
		}
		/// <summary>
		/// 获取实体
		/// <param name="pageIndex">分页第几页</param>
		/// <param name="pageSize">分页一页取值</param>
		/// </summary>
		public Menu GetMenu(int id)
		{
			return Search().Where(b => b.ID == id).First();
		}
		/// <summary>
		/// 获取列表
		/// <param name="pageIndex">分页第几页</param>
		/// <param name="pageSize">分页一页取值</param>
		/// </summary>
		public List<Menu> GetList(int pageIndex, int pageSize)
		{
			return this.Search().Page(pageIndex, pageSize).ToList();
		}
		/// <summary>
		/// 获取列表
		/// <param name="tableName">表名</param>
		/// <param name="pageIndex">分页第几页</param>
		/// <param name="pageSize">分页一页取值</param>
		/// </summary>
		public List<Menu> GetList(string tableName, int pageIndex=1, int pageSize=12)
		{
			return this.Search(tableName).Page(pageIndex, pageSize).ToList();
		}
		/// <summary>
		/// 添加实体
		/// <param name="obj">传进的实体</param>
		/// </summary>
		public int Insert(Menu obj)
		{
			return db.Insert(obj);
		}
		/// <summary>
		/// 更新实体
		/// <param name="obj">传进的实体</param>
		/// </summary>
		public int Update(Menu obj)
		{
			return db.Update(obj);
		}
		/// <summary>
		/// 删除实体
		/// <param name="obj">传进的实体</param>
		/// </summary>
		public int Delete(Menu obj)
		{
			return db.Delete(obj);
		}
		/// <summary>
		/// 删除实体
		/// <param name="id">id</param>
		/// </summary>
		public int Delete(int id)
		{
			var obj = Search().Where(b => b.ID == id).First();
			return db.Delete(obj);
		}
		/// <summary>
		/// 批量删除实体
		/// <param name="obj">传进的实体列表</param>
		/// </summary>
		public int Deletes(List<Menu> objs)
		{
			return db.Delete<Menu>(objs);
		}
		/// <summary>
		/// 执行sql语句
		/// <param name="sql"></param>
		/// </summary>
		public SqlSection ExecuteSQL(string sql)
		{
			return db.FromSql(sql);
		}
		/// <summary>
		/// 执行存储过程
		/// <param name="sql"></param>
		/// </summary>
		public ProcSection ExcuteProc(string procName)
		{
			return db.FromProc(procName);
		}
	}

}

