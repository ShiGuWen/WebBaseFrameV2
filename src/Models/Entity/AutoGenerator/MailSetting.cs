//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由WEF.ModelGenerator, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null生成;时间 2018-11-12 14:37:16.347
//     运行时版本:4.0.30319.42000
//     不建议手动更改此代码，如有需要请自行扩展partial类
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Runtime.Serialization;
using WEF;
using WEF.Common;
using WEF.Section;
using System.Collections.Generic;

namespace WebBaseFrame.Models
{

	/// <summary>
	/// 实体类MailSetting
	/// </summary>
	[Serializable, DataContract]
	public partial class MailSetting : Entity 
	{
		private static string m_tableName;
		public MailSetting():base("MailSetting") {m_tableName="MailSetting";}
		public MailSetting(string tableName):base(tableName) { m_tableName=tableName;}

		#region Model
		private int _ID;
		private int? _CreateUserID;
		private int? _LastUpdateUserID;
		private DateTime? _CreateDate;
		private DateTime? _LastUpdateDate;
		private bool _IsDeleted;
		private string _MailServer;
		private int? _MailPort;
		private string _MailFrom;
		private int? _MailAuth;
		private int? _MailSSL;
		private string _MailUser;
		private string _MailPassword;
		private string _AdminMail;
		/// <summary>
		/// ID 
		/// </summary>
		[DataMember]
		public int ID
		{
			get{ return _ID; }
			set
			{
				this.OnPropertyValueChange(_.ID,_ID,value);
				this._ID=value;
			}
		}
		/// <summary>
		/// CreateUserID 
		/// </summary>
		[DataMember]
		public int? CreateUserID
		{
			get{ return _CreateUserID; }
			set
			{
				this.OnPropertyValueChange(_.CreateUserID,_CreateUserID,value);
				this._CreateUserID=value;
			}
		}
		/// <summary>
		/// LastUpdateUserID 
		/// </summary>
		[DataMember]
		public int? LastUpdateUserID
		{
			get{ return _LastUpdateUserID; }
			set
			{
				this.OnPropertyValueChange(_.LastUpdateUserID,_LastUpdateUserID,value);
				this._LastUpdateUserID=value;
			}
		}
		/// <summary>
		/// CreateDate 
		/// </summary>
		[DataMember]
		public DateTime? CreateDate
		{
			get{ return _CreateDate; }
			set
			{
				this.OnPropertyValueChange(_.CreateDate,_CreateDate,value);
				this._CreateDate=value;
			}
		}
		/// <summary>
		/// LastUpdateDate 
		/// </summary>
		[DataMember]
		public DateTime? LastUpdateDate
		{
			get{ return _LastUpdateDate; }
			set
			{
				this.OnPropertyValueChange(_.LastUpdateDate,_LastUpdateDate,value);
				this._LastUpdateDate=value;
			}
		}
		/// <summary>
		/// IsDeleted 
		/// </summary>
		[DataMember]
		public bool IsDeleted
		{
			get{ return _IsDeleted; }
			set
			{
				this.OnPropertyValueChange(_.IsDeleted,_IsDeleted,value);
				this._IsDeleted=value;
			}
		}
		/// <summary>
		/// MailServer 
		/// </summary>
		[DataMember]
		public string MailServer
		{
			get{ return _MailServer; }
			set
			{
				this.OnPropertyValueChange(_.MailServer,_MailServer,value);
				this._MailServer=value;
			}
		}
		/// <summary>
		/// MailPort 
		/// </summary>
		[DataMember]
		public int? MailPort
		{
			get{ return _MailPort; }
			set
			{
				this.OnPropertyValueChange(_.MailPort,_MailPort,value);
				this._MailPort=value;
			}
		}
		/// <summary>
		/// MailFrom 
		/// </summary>
		[DataMember]
		public string MailFrom
		{
			get{ return _MailFrom; }
			set
			{
				this.OnPropertyValueChange(_.MailFrom,_MailFrom,value);
				this._MailFrom=value;
			}
		}
		/// <summary>
		/// MailAuth 
		/// </summary>
		[DataMember]
		public int? MailAuth
		{
			get{ return _MailAuth; }
			set
			{
				this.OnPropertyValueChange(_.MailAuth,_MailAuth,value);
				this._MailAuth=value;
			}
		}
		/// <summary>
		/// MailSSL 
		/// </summary>
		[DataMember]
		public int? MailSSL
		{
			get{ return _MailSSL; }
			set
			{
				this.OnPropertyValueChange(_.MailSSL,_MailSSL,value);
				this._MailSSL=value;
			}
		}
		/// <summary>
		/// MailUser 
		/// </summary>
		[DataMember]
		public string MailUser
		{
			get{ return _MailUser; }
			set
			{
				this.OnPropertyValueChange(_.MailUser,_MailUser,value);
				this._MailUser=value;
			}
		}
		/// <summary>
		/// MailPassword 
		/// </summary>
		[DataMember]
		public string MailPassword
		{
			get{ return _MailPassword; }
			set
			{
				this.OnPropertyValueChange(_.MailPassword,_MailPassword,value);
				this._MailPassword=value;
			}
		}
		/// <summary>
		/// AdminMail 
		/// </summary>
		[DataMember]
		public string AdminMail
		{
			get{ return _AdminMail; }
			set
			{
				this.OnPropertyValueChange(_.AdminMail,_AdminMail,value);
				this._AdminMail=value;
			}
		}
		#endregion

		#region Method
		/// <summary>
		/// 获取实体中的标识列
		/// </summary>
		public override Field GetIdentityField()
		{
			return _.ID;
		}
		/// <summary>
		/// 获取实体中的主键列
		/// </summary>
		public override Field[] GetPrimaryKeyFields()
		{
			return new Field[] {
				_.ID};
		}
		/// <summary>
		/// 获取列信息
		/// </summary>
		public override Field[] GetFields()
		{
			return new Field[] {
				_.ID,
				_.CreateUserID,
				_.LastUpdateUserID,
				_.CreateDate,
				_.LastUpdateDate,
				_.IsDeleted,
				_.MailServer,
				_.MailPort,
				_.MailFrom,
				_.MailAuth,
				_.MailSSL,
				_.MailUser,
				_.MailPassword,
				_.AdminMail};
		}
		/// <summary>
		/// 获取值信息
		/// </summary>
		public override object[] GetValues()
		{
			return new object[] {
				this._ID,
				this._CreateUserID,
				this._LastUpdateUserID,
				this._CreateDate,
				this._LastUpdateDate,
				this._IsDeleted,
				this._MailServer,
				this._MailPort,
				this._MailFrom,
				this._MailAuth,
				this._MailSSL,
				this._MailUser,
				this._MailPassword,
				this._AdminMail};
		}
		#endregion

		#region _Field
		/// <summary>
		/// 字段信息
		/// </summary>
		public class _
		{
			/// <summary>
			/// MailSetting 
			/// </summary>
			public readonly static Field All = new Field("*",m_tableName);
			/// <summary>
			/// ID 
			/// </summary>
			public readonly static Field ID = new Field("ID",m_tableName,"ID");
			/// <summary>
			/// CreateUserID 
			/// </summary>
			public readonly static Field CreateUserID = new Field("CreateUserID",m_tableName,"CreateUserID");
			/// <summary>
			/// LastUpdateUserID 
			/// </summary>
			public readonly static Field LastUpdateUserID = new Field("LastUpdateUserID",m_tableName,"LastUpdateUserID");
			/// <summary>
			/// CreateDate 
			/// </summary>
			public readonly static Field CreateDate = new Field("CreateDate",m_tableName,"CreateDate");
			/// <summary>
			/// LastUpdateDate 
			/// </summary>
			public readonly static Field LastUpdateDate = new Field("LastUpdateDate",m_tableName,"LastUpdateDate");
			/// <summary>
			/// IsDeleted 
			/// </summary>
			public readonly static Field IsDeleted = new Field("IsDeleted",m_tableName,"IsDeleted");
			/// <summary>
			/// MailServer 
			/// </summary>
			public readonly static Field MailServer = new Field("MailServer",m_tableName,"MailServer");
			/// <summary>
			/// MailPort 
			/// </summary>
			public readonly static Field MailPort = new Field("MailPort",m_tableName,"MailPort");
			/// <summary>
			/// MailFrom 
			/// </summary>
			public readonly static Field MailFrom = new Field("MailFrom",m_tableName,"MailFrom");
			/// <summary>
			/// MailAuth 
			/// </summary>
			public readonly static Field MailAuth = new Field("MailAuth",m_tableName,"MailAuth");
			/// <summary>
			/// MailSSL 
			/// </summary>
			public readonly static Field MailSSL = new Field("MailSSL",m_tableName,"MailSSL");
			/// <summary>
			/// MailUser 
			/// </summary>
			public readonly static Field MailUser = new Field("MailUser",m_tableName,"MailUser");
			/// <summary>
			/// MailPassword 
			/// </summary>
			public readonly static Field MailPassword = new Field("MailPassword",m_tableName,"MailPassword");
			/// <summary>
			/// AdminMail 
			/// </summary>
			public readonly static Field AdminMail = new Field("AdminMail",m_tableName,"AdminMail");
		}
		#endregion


	}
	/// <summary>
	/// 实体类MailSetting操作类
	/// </summary>
	public partial class MailSettingRepository
	{
		DBContext db;
		/// <summary>
		/// 当前实体查询上下文
		/// </summary>
		public ISearch<MailSetting> Search(string tableName="")
		{
			if (string.IsNullOrEmpty(tableName))
			{
				tableName="MailSetting";
			}
				return db.Search<MailSetting>(tableName);
		}
		/// <summary>
		/// 当前实体查询上下文
		/// </summary>
		public ISearch<MailSetting> Search(MailSetting entity)
		{
				return db.Search<MailSetting>(entity);
		}
		/// <summary>
		/// 构造方法
		/// </summary>
		public MailSettingRepository()
		{
			db = new DBContext();
		}
		/// <summary>
		/// 构造方法
		/// <param name="connStrName">连接字符串中的名称</param>
		/// </summary>
		public MailSettingRepository(string connStrName)
		{
			db = new DBContext(connStrName);
		}
		/// <summary>
		/// 当前db操作上下文
		/// </summary>
		public DBContext DBContext
		{
			get
			{
				return db;
			}
		}
		/// <summary>
		/// 获取实体
		/// <param name="pageIndex">分页第几页</param>
		/// <param name="pageSize">分页一页取值</param>
		/// </summary>
		public MailSetting GetMailSetting(int id)
		{
			return Search().Where(b => b.ID == id).First();
		}
		/// <summary>
		/// 获取列表
		/// <param name="pageIndex">分页第几页</param>
		/// <param name="pageSize">分页一页取值</param>
		/// </summary>
		public List<MailSetting> GetList(int pageIndex, int pageSize)
		{
			return this.Search().Page(pageIndex, pageSize).ToList();
		}
		/// <summary>
		/// 获取列表
		/// <param name="tableName">表名</param>
		/// <param name="pageIndex">分页第几页</param>
		/// <param name="pageSize">分页一页取值</param>
		/// </summary>
		public List<MailSetting> GetList(string tableName, int pageIndex=1, int pageSize=12)
		{
			return this.Search(tableName).Page(pageIndex, pageSize).ToList();
		}
		/// <summary>
		/// 添加实体
		/// <param name="obj">传进的实体</param>
		/// </summary>
		public int Insert(MailSetting obj)
		{
			return db.Insert(obj);
		}
		/// <summary>
		/// 更新实体
		/// <param name="obj">传进的实体</param>
		/// </summary>
		public int Update(MailSetting obj)
		{
			return db.Update(obj);
		}
		/// <summary>
		/// 删除实体
		/// <param name="obj">传进的实体</param>
		/// </summary>
		public int Delete(MailSetting obj)
		{
			return db.Delete(obj);
		}
		/// <summary>
		/// 删除实体
		/// <param name="id">id</param>
		/// </summary>
		public int Delete(int id)
		{
			var obj = Search().Where(b => b.ID == id).First();
			return db.Delete(obj);
		}
		/// <summary>
		/// 批量删除实体
		/// <param name="obj">传进的实体列表</param>
		/// </summary>
		public int Deletes(List<MailSetting> objs)
		{
			return db.Delete<MailSetting>(objs);
		}
		/// <summary>
		/// 执行sql语句
		/// <param name="sql"></param>
		/// </summary>
		public SqlSection ExecuteSQL(string sql)
		{
			return db.FromSql(sql);
		}
		/// <summary>
		/// 执行存储过程
		/// <param name="sql"></param>
		/// </summary>
		public ProcSection ExcuteProc(string procName)
		{
			return db.FromProc(procName);
		}
	}

}

